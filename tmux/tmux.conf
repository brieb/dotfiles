set-window-option -g mode-mouse on
set-option -g mouse-select-pane on

set-option -g default-command "reattach-to-user-namespace -l bash"

bind R source-file ~/.tmux.conf

# Bind function keys.
bind -n F1 select-window -t 1
bind -n F2 select-window -t 2
bind -n F3 select-window -t 3
bind -n F4 select-window -t 4
bind -n F5 select-window -t 5
bind -n F6 select-window -t 6
bind -n F7 select-window -t 7
bind -n F8 select-window -t 8

set -g status-right "%l:%M%p" # %d-%b-%y
set-window-option -g clock-mode-style 12

# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to C-A.
unbind C-b
set -g prefix C-A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen C-X x 
unbind C-X
bind C-X lock-server
unbind x
bind x lock-server

# screen C-C c 
unbind C-C
bind C-C new-window
unbind c
bind c new-window

# detach C-D d
unbind C-D
bind C-D detach

# displays * 
unbind *
bind * list-clients

# next C-@ C-N sp n 
unbind C-@
bind C-@ next-window
unbind C-N
bind C-N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other C-A
unbind C-A
bind C-A last-window

# prev C-H C-P p C-? 
unbind C-H
bind C-H previous-window
unbind C-P
bind C-P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows C-W w 
unbind C-W
bind C-W list-windows
unbind w
bind w list-windows

# quit \ 
unbind \
bind \ confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
#unbind k
#bind k confirm-before "kill-window"

bind q kill-pane

# redisplay C-L l 
unbind C-L
bind C-L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any

# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 25
bind -r > resize-pane -R 25
bind -r - resize-pane -D 25
bind -r + resize-pane -U 25

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
